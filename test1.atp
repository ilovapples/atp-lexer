/* the string type will probably be equivalent to:
 * struct {
 *       u8 buf[];
 *       u64 len;
 * };
 */
func main() -> s32
{
	s32 helo = 4; // initialize `a` to 3
	string test_str = "helo"; /* a string type (equivalent to a struct with `u8 buf[]` and `u64 len`) */
	helo = 0d80; // assign `a` an integral value

	return 0; /* return the value 0 to the OS */
}

/* tokens:
{ IdentifierToken, FUNC_KEYWORD, "func" }
{ IdentifierToken, NORMAL_IDENTIFIER, "main" }
{ StartParenToken, NOT_IDENTIFIER, "(" }
{ EndParenToken, NOT_IDENTIFIER, ")" }
{ ReturnTypeIndicatorToken, NOT_IDENTIFIER, "->" }
{ KeywordToken, TYPE_KEYWORD, "s32" }
{ StartBlockToken, NOT_IDENTIFIER, "{" }
{ IdentifierToken, TYPE_KEYWORD, "s32" }
{ IdentifierToken, NORMAL_IDENTIFIER, "a" }
{ VarInitializerToken, NOT_IDENTIFIER, ":=" }
{ IntegerLiteralToken, NOT_IDENTIFIER, "3" }
{ EndStatementToken, NOT_IDENTIFIER, ";" }
{ IdentifierToken, NORMAL_IDENTIFIER, "a" }
{ OperatorToken, NOT_IDENTIFIER, "=" }
{ IntegerLiteralToken, NOT_IDENTIFIER, "8" }
{ EndStatementToken, NOT_IDENTIFIER, ";" }
{ IdentifierToken, RETURN_KEYWORD, "return" }
{ IntegerLiteralToken, NOT_IDENTIFIER, "0" }
{ EndStatementToken, NOT_IDENTIFIER, ";" }
{ EndBlock, NOT_IDENTIFIER, "}" }
*/
